# Generated by Django 4.0.4 on 2022-07-18 06:48

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brands',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(max_length=250, verbose_name='Brand')),
                ('slug', models.SlugField(max_length=250, verbose_name='URL')),
                ('is_public', models.BooleanField(default=True, verbose_name='Is public')),
            ],
        ),
        migrations.CreateModel(
            name='Categories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=250, verbose_name='Category')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('is_public', models.BooleanField(default=True, verbose_name='Is public')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'index_together': {('id', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='ProductQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=100, verbose_name='Name')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('question', models.TextField(verbose_name='Question')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('is_public', models.BooleanField(default=True, verbose_name='Is public')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['-date_create'],
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.CharField(max_length=250, verbose_name='Product')),
                ('short_description', models.TextField(verbose_name='Short description')),
                ('full_description', models.TextField(verbose_name='Full description')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Price')),
                ('stock', models.PositiveIntegerField(default=0, verbose_name='Stock')),
                ('available', models.BooleanField(default=True, verbose_name='Is available')),
                ('data_created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('data_updated', models.DateTimeField(auto_now=True, verbose_name='Updated')),
                ('image', models.ImageField(upload_to='products', verbose_name='Photo')),
                ('brand', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='brands', to='topikstore.brands', verbose_name='Brand')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='catproducts', to='topikstore.categories', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Product',
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='Sizes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.CharField(max_length=25, verbose_name='Size')),
                ('is_public', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Answers',
            fields=[
                ('question', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='answer', serialize=False, to='topikstore.productquestions', verbose_name='Question')),
                ('answer', models.TextField(verbose_name='Answer')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('date_update', models.DateTimeField(auto_now=True, verbose_name='Updated')),
            ],
            options={
                'verbose_name': 'Answer',
                'verbose_name_plural': 'Answers',
                'ordering': ['-date_create'],
            },
        ),
        migrations.CreateModel(
            name='ProductDetail',
            fields=[
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='detail', serialize=False, to='topikstore.products', verbose_name='Product')),
                ('terms', models.TextField(blank=True, verbose_name='Terms of use')),
                ('composition', models.TextField(verbose_name='Composition')),
                ('ph', models.FloatField(null=True, verbose_name='PH')),
                ('contraindications', models.CharField(max_length=300, verbose_name='Contraindications')),
                ('storage_conditions', models.TextField(blank=True, verbose_name='Storage conditions')),
                ('age_category', models.CharField(max_length=100, verbose_name="Age's category")),
                ('expiration_date', models.CharField(max_length=300, verbose_name='Expiration date')),
            ],
        ),
        migrations.CreateModel(
            name='Subcategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subcategory', models.CharField(max_length=250, verbose_name='Subcategory')),
                ('slug', models.SlugField(max_length=255, unique=True, verbose_name='URL')),
                ('is_public', models.BooleanField(default=True, verbose_name='Is public')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subcats', to='topikstore.categories', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Subcategory',
                'verbose_name_plural': 'Subcategories',
                'index_together': {('id', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='ProductsPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('photo', models.ImageField(upload_to='products/', verbose_name="Product's image")),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='topikstore.products', verbose_name='Product')),
            ],
        ),
        migrations.AddField(
            model_name='products',
            name='size',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='topikstore.sizes', verbose_name='Size'),
        ),
        migrations.AddField(
            model_name='products',
            name='subcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subcatproducts', to='topikstore.subcategories', verbose_name='Subcategory'),
        ),
        migrations.AddField(
            model_name='productquestions',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='topikstore.products', verbose_name='Product'),
        ),
        migrations.CreateModel(
            name='ProductFeedbacks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_name', models.CharField(max_length=100, verbose_name="Author's name")),
                ('feedback', models.TextField(verbose_name='Feedback')),
                ('date_create', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('is_public', models.BooleanField(default=True, verbose_name='Is public')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='topikstore.products', verbose_name='Product')),
            ],
            options={
                'verbose_name': 'Feedback',
                'verbose_name_plural': 'Feedbacks',
                'ordering': ['-date_create'],
            },
        ),
    ]
